/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MyContractBase,
  MyContractBaseInterface,
} from "../../../contracts/base/MyContractBase";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CreateTaskFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelNewTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "luckyNumber",
        type: "uint256",
      },
    ],
    name: "createNewTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_taskCreator",
        type: "address",
      },
    ],
    name: "setTaskCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taskCreator",
    outputs: [
      {
        internalType: "contract ITaskCreator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a61806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063721f71de11610097578063b80c148f11610066578063b80c148f146101ee578063d4e06ed4146101f6578063dd62ed3e14610226578063e96d75c31461023957600080fd5b8063721f71de146101ab57806395d89b41146101c0578063a457c2d7146101c8578063a9059cbb146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261026f565b60405161010f9190610891565b60405180910390f35b61012b6101263660046108f4565b610301565b604051901515815260200161010f565b6035545b60405190815260200161010f565b61012b61015b366004610920565b61031b565b6040516012815260200161010f565b61012b61017d3660046108f4565b61033f565b61013f610190366004610961565b6001600160a01b031660009081526033602052604090205490565b6101be6101b9366004610985565b610361565b005b6101026103c6565b61012b6101d63660046108f4565b6103d5565b61012b6101e93660046108f4565b610455565b6101be610463565b60655461020e9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61013f61023436600461099e565b61051d565b6101be610247366004610961565b606580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60606036805461027e906109d7565b80601f01602080910402602001604051908101604052809291908181526020018280546102aa906109d7565b80156102f75780601f106102cc576101008083540402835291602001916102f7565b820191906000526020600020905b8154815290600101906020018083116102da57829003601f168201915b5050505050905090565b60003361030f818585610548565b60019150505b92915050565b60003361032985828561066c565b6103348585856106e6565b506001949350505050565b60003361030f818585610352838361051d565b61035c9190610a11565b610548565b606554604051630c759a4d60e21b8152600481018390526101009091046001600160a01b0316906331d6693490602401600060405180830381600087803b1580156103ab57600080fd5b505af11580156103bf573d6000803e3d6000fd5b5050505050565b60606037805461027e906109d7565b600033816103e3828661051d565b9050838110156104485760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103348286868403610548565b60003361030f8185856106e6565b60655461010090046001600160a01b03161561051b57606560019054906101000a90046001600160a01b03166001600160a01b031663f7d9ae736040518163ffffffff1660e01b81526004016020604051808303816000875af19250505080156104ea575060408051601f3d908101601f191682019092526104e791810190610a32565b60015b610519576040517f8903200cfa41a5af84756fa75906a5347e0482a5236d16b048cd8bcb3bcc12b090600090a1565b505b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166105aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043f565b6001600160a01b03821661060b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043f565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610678848461051d565b905060001981146106e057818110156106d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161043f565b6106e08484848403610548565b50505050565b6001600160a01b03831661074a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043f565b6001600160a01b0382166107ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043f565b6001600160a01b038316600090815260336020526040902054818110156108245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161043f565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108849086815260200190565b60405180910390a36106e0565b600060208083528351808285015260005b818110156108be578581018301518582016040015282016108a2565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461051957600080fd5b6000806040838503121561090757600080fd5b8235610912816108df565b946020939093013593505050565b60008060006060848603121561093557600080fd5b8335610940816108df565b92506020840135610950816108df565b929592945050506040919091013590565b60006020828403121561097357600080fd5b813561097e816108df565b9392505050565b60006020828403121561099757600080fd5b5035919050565b600080604083850312156109b157600080fd5b82356109bc816108df565b915060208301356109cc816108df565b809150509250929050565b600181811c908216806109eb57607f821691505b602082108103610a0b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031557634e487b7160e01b600052601160045260246000fd5b600060208284031215610a4457600080fd5b8151801515811461097e57600080fdfea164736f6c6343000813000a";

type MyContractBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContractBase__factory extends ContractFactory {
  constructor(...args: MyContractBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyContractBase> {
    return super.deploy(overrides || {}) as Promise<MyContractBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyContractBase {
    return super.attach(address) as MyContractBase;
  }
  override connect(signer: Signer): MyContractBase__factory {
    return super.connect(signer) as MyContractBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractBaseInterface {
    return new utils.Interface(_abi) as MyContractBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContractBase {
    return new Contract(address, _abi, signerOrProvider) as MyContractBase;
  }
}
