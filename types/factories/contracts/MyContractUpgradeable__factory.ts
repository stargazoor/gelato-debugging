/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MyContractUpgradeable,
  MyContractUpgradeableInterface,
} from "../../contracts/MyContractUpgradeable";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CreateTaskFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelNewTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "luckyNumber",
        type: "uint256",
      },
    ],
    name: "createNewTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_taskCreator",
        type: "address",
      },
    ],
    name: "setTaskCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taskCreator",
    outputs: [
      {
        internalType: "contract ITaskCreator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060405162001cdd38038062001cdd83398101604081905262000038916200037a565b6200004482826200004c565b50506200053e565b600054610100900460ff16158080156200006d5750600054600160ff909116105b80620000895750303b15801562000089575060005460ff166001145b620000f25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000116576000805461ff0019166101001790555b6200012283836200016e565b801562000169576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b600054610100900460ff16620001ca5760405162461bcd60e51b815260206004820152602b602482015260008051602062001cbd83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000e9565b620001d68282620001da565b5050565b600054610100900460ff16620002365760405162461bcd60e51b815260206004820152602b602482015260008051602062001cbd83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000e9565b620001d68282600054610100900460ff16620002985760405162461bcd60e51b815260206004820152602b602482015260008051602062001cbd83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000e9565b609a620002a6838262000472565b50609b62000169828262000472565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002dd57600080fd5b81516001600160401b0380821115620002fa57620002fa620002b5565b604051601f8301601f19908116603f01168101908282118183101715620003255762000325620002b5565b816040528381526020925086838588010111156200034257600080fd5b600091505b8382101562000366578582018301518183018401529082019062000347565b600093810190920192909252949350505050565b600080604083850312156200038e57600080fd5b82516001600160401b0380821115620003a657600080fd5b620003b486838701620002cb565b93506020850151915080821115620003cb57600080fd5b50620003da85828601620002cb565b9150509250929050565b600181811c90821680620003f957607f821691505b6020821081036200041a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016957600081815260208120601f850160051c81016020861015620004495750805b601f850160051c820191505b818110156200046a5782815560010162000455565b505050505050565b81516001600160401b038111156200048e576200048e620002b5565b620004a6816200049f8454620003e4565b8462000420565b602080601f831160018114620004de5760008415620004c55750858301515b600019600386901b1c1916600185901b1785556200046a565b600085815260208120601f198616915b828110156200050f57888601518255948401946001909101908401620004ee565b50858210156200052e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516117476200057660003960008181610493015281816104dc015281816106a9015281816106e9015261077301526117476000f3fe6080604052600436106101145760003560e01c806352d1902d116100a0578063a9059cbb11610064578063a9059cbb146102e4578063b80c148f14610304578063d4e06ed414610319578063dd62ed3e14610356578063e96d75c31461037657600080fd5b806352d1902d1461024457806370a0823114610259578063721f71de1461028f57806395d89b41146102af578063a457c2d7146102c457600080fd5b8063313ce567116100e7578063313ce567146101b35780633659cfe6146101cf57806339509351146101f15780634cd88b76146102115780634f1ef2861461023157600080fd5b806306fdde0314610119578063095ea7b31461014457806318160ddd1461017457806323b872dd14610193575b600080fd5b34801561012557600080fd5b5061012e6103b9565b60405161013b91906111c2565b60405180910390f35b34801561015057600080fd5b5061016461015f36600461120a565b61044b565b604051901515815260200161013b565b34801561018057600080fd5b506099545b60405190815260200161013b565b34801561019f57600080fd5b506101646101ae366004611236565b610465565b3480156101bf57600080fd5b506040516012815260200161013b565b3480156101db57600080fd5b506101ef6101ea366004611277565b610489565b005b3480156101fd57600080fd5b5061016461020c36600461120a565b610568565b34801561021d57600080fd5b506101ef61022c366004611340565b61058a565b6101ef61023f3660046113a4565b61069f565b34801561025057600080fd5b50610185610766565b34801561026557600080fd5b50610185610274366004611277565b6001600160a01b031660009081526097602052604090205490565b34801561029b57600080fd5b506101ef6102aa3660046113fe565b610819565b3480156102bb57600080fd5b5061012e61087e565b3480156102d057600080fd5b506101646102df36600461120a565b61088d565b3480156102f057600080fd5b506101646102ff36600461120a565b610908565b34801561031057600080fd5b506101ef610916565b34801561032557600080fd5b5060c95461033e9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b34801561036257600080fd5b50610185610371366004611417565b6109cd565b34801561038257600080fd5b506101ef610391366004611277565b60c980546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6060609a80546103c890611450565b80601f01602080910402602001604051908101604052809291908181526020018280546103f490611450565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b6000336104598185856109f8565b60019150505b92915050565b600033610473858285610b1c565b61047e858585610b96565b506001949350505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104da5760405162461bcd60e51b81526004016104d19061148a565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105236000805160206116f4833981519152546001600160a01b031690565b6001600160a01b0316146105495760405162461bcd60e51b81526004016104d1906114d6565b6040805160008082526020820190925261056591839190610d41565b50565b60003361045981858561057b83836109cd565b6105859190611522565b6109f8565b600054610100900460ff16158080156105aa5750600054600160ff909116105b806105c45750303b1580156105c4575060005460ff166001145b6106275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104d1565b6000805460ff19166001179055801561064a576000805461ff0019166101001790555b6106548383610eac565b801561069a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106e75760405162461bcd60e51b81526004016104d19061148a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107306000805160206116f4833981519152546001600160a01b031690565b6001600160a01b0316146107565760405162461bcd60e51b81526004016104d1906114d6565b61076282826001610d41565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108065760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104d1565b506000805160206116f483398151915290565b60c954604051630c759a4d60e21b8152600481018390526101009091046001600160a01b0316906331d6693490602401600060405180830381600087803b15801561086357600080fd5b505af1158015610877573d6000803e3d6000fd5b5050505050565b6060609b80546103c890611450565b6000338161089b82866109cd565b9050838110156108fb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104d1565b61047e82868684036109f8565b600033610459818585610b96565b60c95461010090046001600160a01b0316156109cb5760c960019054906101000a90046001600160a01b03166001600160a01b031663f7d9ae736040518163ffffffff1660e01b81526004016020604051808303816000875af192505050801561099d575060408051601f3d908101601f1916820190925261099a91810190611543565b60015b610565576040517f8903200cfa41a5af84756fa75906a5347e0482a5236d16b048cd8bcb3bcc12b090600090a15b565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b6001600160a01b038316610a5a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d1565b6001600160a01b038216610abb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d1565b6001600160a01b0383811660008181526098602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b2884846109cd565b90506000198114610b905781811015610b835760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104d1565b610b9084848484036109f8565b50505050565b6001600160a01b038316610bfa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d1565b6001600160a01b038216610c5c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d1565b6001600160a01b03831660009081526097602052604090205481811015610cd45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104d1565b6001600160a01b0380851660008181526097602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d349086815260200190565b60405180910390a3610b90565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610d745761069a83610edd565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610dce575060408051601f3d908101601f19168201909252610dcb91810190611565565b60015b610e315760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104d1565b6000805160206116f48339815191528114610ea05760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104d1565b5061069a838383610f79565b600054610100900460ff16610ed35760405162461bcd60e51b81526004016104d19061157e565b6107628282610f9e565b6001600160a01b0381163b610f4a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104d1565b6000805160206116f483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f8283610fcf565b600082511180610f8f5750805b1561069a57610b90838361100f565b600054610100900460ff16610fc55760405162461bcd60e51b81526004016104d19061157e565b610762828261103b565b610fd881610edd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061103483836040518060600160405280602781526020016117146027913961107b565b9392505050565b600054610100900460ff166110625760405162461bcd60e51b81526004016104d19061157e565b609a61106e8382611617565b50609b61069a8282611617565b6060600080856001600160a01b03168560405161109891906116d7565b600060405180830381855af49150503d80600081146110d3576040519150601f19603f3d011682016040523d82523d6000602084013e6110d8565b606091505b50915091506110e9868383876110f3565b9695505050505050565b6060831561116257825160000361115b576001600160a01b0385163b61115b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d1565b508161116c565b61116c8383611174565b949350505050565b8151156111845781518083602001fd5b8060405162461bcd60e51b81526004016104d191906111c2565b60005b838110156111b95781810151838201526020016111a1565b50506000910152565b60208152600082518060208401526111e181604085016020870161119e565b601f01601f19169190910160400192915050565b6001600160a01b038116811461056557600080fd5b6000806040838503121561121d57600080fd5b8235611228816111f5565b946020939093013593505050565b60008060006060848603121561124b57600080fd5b8335611256816111f5565b92506020840135611266816111f5565b929592945050506040919091013590565b60006020828403121561128957600080fd5b8135611034816111f5565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156112c5576112c5611294565b604051601f8501601f19908116603f011681019082821181831017156112ed576112ed611294565b8160405280935085815286868601111561130657600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261133157600080fd5b611034838335602085016112aa565b6000806040838503121561135357600080fd5b823567ffffffffffffffff8082111561136b57600080fd5b61137786838701611320565b9350602085013591508082111561138d57600080fd5b5061139a85828601611320565b9150509250929050565b600080604083850312156113b757600080fd5b82356113c2816111f5565b9150602083013567ffffffffffffffff8111156113de57600080fd5b8301601f810185136113ef57600080fd5b61139a858235602084016112aa565b60006020828403121561141057600080fd5b5035919050565b6000806040838503121561142a57600080fd5b8235611435816111f5565b91506020830135611445816111f5565b809150509250929050565b600181811c9082168061146457607f821691505b60208210810361148457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b8082018082111561045f57634e487b7160e01b600052601160045260246000fd5b60006020828403121561155557600080fd5b8151801515811461103457600080fd5b60006020828403121561157757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561069a57600081815260208120601f850160051c810160208610156115f05750805b601f850160051c820191505b8181101561160f578281556001016115fc565b505050505050565b815167ffffffffffffffff81111561163157611631611294565b6116458161163f8454611450565b846115c9565b602080601f83116001811461167a57600084156116625750858301515b600019600386901b1c1916600185901b17855561160f565b600085815260208120601f198616915b828110156116a95788860151825594840194600190910190840161168a565b50858210156116c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516116e981846020870161119e565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000813000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type MyContractUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContractUpgradeable__factory extends ContractFactory {
  constructor(...args: MyContractUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyContractUpgradeable> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<MyContractUpgradeable>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): MyContractUpgradeable {
    return super.attach(address) as MyContractUpgradeable;
  }
  override connect(signer: Signer): MyContractUpgradeable__factory {
    return super.connect(signer) as MyContractUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractUpgradeableInterface {
    return new utils.Interface(_abi) as MyContractUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContractUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MyContractUpgradeable;
  }
}
